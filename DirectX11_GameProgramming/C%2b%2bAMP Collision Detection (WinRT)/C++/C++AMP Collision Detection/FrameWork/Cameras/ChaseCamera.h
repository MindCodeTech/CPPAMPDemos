/*
	FOR GETTING MORE INFORMATION ABOUT THIS CODE PLEASE CHECK http://directx11-1-gameprogramming.azurewebsites.net/
	THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF
	ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
	THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
	PARTICULAR PURPOSE.
	Copyright (c) Microsoft Corporation. All rights reserved

	File Name        : ChaseCamera.h
	Generated by     : Pooya Eimandar (http://Pooya-Eimandar.com/)
	File Description :
*/

#pragma once

#include "BaseCamera.h"
#include "FrameWork\DXHelper.h"
#include "Graphics\Model.h"

#define RUp       10.0f
#define RDown     -4.0f
#define LEFTRIGHT 7.0f
#define UPDOWN    50.0f
#define ZINDEX    120.0f

ref class ChaseCamera : public BaseCamera
{
private:

	float yaw;
	float pitch;
	float stiffness;
	float damping;
	float mass;
	DirectX::XMFLOAT3 velocity;
	DirectX::XMFLOAT3 desiredPosition;
	DirectX::XMFLOAT3 lookAtOffset;
	DirectX::XMFLOAT3 RightVec;
	DirectX::XMFLOAT3 HeadingVec;
	DirectX::XMFLOAT3 desiredPositionOffset;

internal:
	ChaseCamera(float AspectRatio);
	
	property float Yaw
	{
		float get()
		{
			return this->yaw;
		}
		void set(float val)
		{
			this->yaw = val;
		}
	}
	property float Pitch
	{
		float get()
		{
			return this->pitch;
		}
		void set(float val)
		{
			this->pitch = MathHelper::Restrict(val, RDown, RUp);
		}
	}
	property float LeftRight
	{
		float get()
		{
			return this->desiredPositionOffset.x;
		}
		void set(float val)
		{
			this->desiredPositionOffset.x = val;
		}
	}
	property float UpDown
	{
		float get()
		{
			return this->desiredPositionOffset.y;
		}
		void set(float val)
		{
			this->desiredPositionOffset.y = val;
		}
	}
	property float ZIndex
	{
		float get()
		{
			return this->desiredPositionOffset.z;
		}
		void set(float val)
		{
			this->desiredPositionOffset.z = val;
		}
	}

	void Update(DirectX::XMFLOAT3 BindPos, float Yaw);
	void Reset();
};


