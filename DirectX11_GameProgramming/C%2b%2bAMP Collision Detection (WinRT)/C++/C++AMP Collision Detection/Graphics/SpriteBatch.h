/*
	FOR GETTING MORE INFORMATION ABOUT THIS CODE PLEASE CHECK http://directx11-1-gameprogramming.azurewebsites.net/
	THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF
	ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
	THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
	PARTICULAR PURPOSE.
	Copyright (c) Microsoft Corporation. All rights reserved

	File Name        : SpriteBatch.h
	Generated by     : Pooya Eimandar (http://Pooya-Eimandar.com/)
	File Description :
*/


#pragma once

using namespace Platform;
using namespace Microsoft::WRL;
using namespace DirectX;
using namespace D2D1;

struct SpriteFontStyle
{
	DWRITE_FONT_WEIGHT WEIGHT;
	DWRITE_FONT_STYLE  STYLE;
	DWRITE_FONT_STRETCH STRETCH;
	DWRITE_TEXT_ALIGNMENT TEXT_ALIGNMENT;
	DWRITE_PARAGRAPH_ALIGNMENT PARAGRAPH_ALIGNMENT;
	float SIZE;
	const WCHAR* LOCAL;
};

//Forward declaration
ref class SpriteBatch;

ref class SpriteFont
{
internal:
	SpriteFont();
	HRESULT Load(Graphics2D graphics2D);
	HRESULT SetColor(Graphics2D graphics2D, ColorF color);
	property IDWriteTextFormat* Font
	{
		IDWriteTextFormat* get()
		{
			return this->font.Get();
		}
	}
	property ID2D1SolidColorBrush* Brush
	{
		ID2D1SolidColorBrush* get()
		{
			return this->brush.Get();
		}
	}

private:
	SpriteFontStyle fontStyle;
	ComPtr<ID2D1SolidColorBrush> brush; 
	ComPtr<IDWriteTextFormat> font;
	ComPtr<IDWriteTextLayout> textLayout;
};

ref class SpriteBatch
{
internal:
	SpriteBatch(Graphics2D graphics2D);
	void SetBackgroundColor(ColorF BackColor, ColorF BorderColor);
	void Begin();
	void ShowRectangle();
	HRESULT ShowString(String^ text, const XMFLOAT2* position, SpriteFont^ spriteFont);
	HRESULT ShowString(String^ text, const XMFLOAT2* position, ID2D1SolidColorBrush* brush, SpriteFont^ spriteFont, Matrix3x2F World);
	HRESULT End();

private:
	Graphics2D G2D;
	String^ text;
	enum SpriteState : byte { STARTED, ENDED };
	SpriteState state;
	D2D1_RECT_F BackgroundText;
	ComPtr<ID2D1SolidColorBrush> BackgroundBrush;
	ComPtr<ID2D1SolidColorBrush> BackgroundBorder;
	ComPtr<IDWriteTextLayout> textLayout;
	ComPtr<ID2D1DrawingStateBlock1> stateBlock;
};