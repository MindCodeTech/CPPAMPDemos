/*
	FOR GETTING MORE INFORMATION ABOUT THIS CODE PLEASE CHECK http://directx11-1-gameprogramming.azurewebsites.net/
	THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF
	ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
	THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
	PARTICULAR PURPOSE.
	Copyright (c) Microsoft Corporation. All rights reserved

	File Name        : ChaseCamera.h
	Generated by     : Pooya Eimandar (http://Pooya-Eimandar.com/)
	File Description :
*/

#include "pch.h"
#include "..\ChaseCamera.h"

using namespace DirectX;
using namespace MathHelper;

ChaseCamera::ChaseCamera(float AspectRatio) : stiffness(4000.0f), damping(800.0f), mass(50.0f),
	lookAtOffset(XMFLOAT3(1.0f, 3.5f, -1.0f)), velocity(XMFLOAT3()), BaseCamera(AspectRatio)
{
	this->position = XMFLOAT3(0,0,0);
	this->desiredPositionOffset = XMFLOAT3(LEFTRIGHT, UPDOWN, ZINDEX);
	this->HeadingVec = this->lookAt - this->position;
	this->HeadingVec = Normalize(this->HeadingVec);
	this->RightVec = Cross(this->HeadingVec, this->Up);

	BaseCamera::UpdateView();
	BaseCamera::UpdateProjection();
}

void ChaseCamera::Update(XMFLOAT3 BindPos, float Yaw)
{
	const float Step = 0.016f;

	this->yaw = Yaw;
	
	this->rotationMatrix = XMMatrixIdentity() * XMMatrixRotationRollPitchYaw(this->pitch, this->yaw, 0);
	// Updates the camera position relative to the model Matrix
	this->desiredPosition = BindPos + TransformNormal(desiredPositionOffset, this->rotationMatrix);
	
	auto stretch = this->position - this->desiredPosition;
	auto force = ( -this->stiffness * stretch ) - ( this->damping * this->velocity );
	auto acceleration = force / this->mass;
	this->velocity = this->velocity + acceleration * Step;
	this->position = this->position + this->velocity * Step;

	this->lookAt = this->position + XMMatrixForward(this->rotationMatrix);
	
	BaseCamera::UpdateView();
}

void ChaseCamera::Reset()
{
	this->desiredPositionOffset = XMFLOAT3(LEFTRIGHT, UPDOWN, ZINDEX);
	BaseCamera::UpdateView();
}