/*
	FOR GETTING MORE INFORMATION ABOUT THIS CODE PLEASE CHECK http://directx11-1-gameprogramming.azurewebsites.net/
	THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF
	ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
	THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
	PARTICULAR PURPOSE.
	Copyright (c) Microsoft Corporation. All rights reserved

	File Name        : XSound.cpp
	Generated by     : Pooya Eimandar (http://Pooya-Eimandar.com/)
	File Description :
*/

#include "pch.h"
#include "FrameWork\DXHelper.h"
#include "..\XSound.h"

XSound::XSound() : audioAvailable(false)
{
}

void XSound::Load(IXAudio2* engine, WAVEFORMATEX* sourceFormat, Platform::Array<byte>^ soundData)
{
	this->soundData = soundData;

	if (engine == nullptr)
	{
		// Audio is not available so just return.
		this->audioAvailable = false;
		return;
	}

	// Create a source voice for this sound effect.
	auto hr = engine->CreateSourceVoice(&this->xSourceVoice, sourceFormat);
	DXHelper::ThrowIfFailed(hr);

	audioAvailable = true;
}

void XSound::Play(float volume)
{
	XAUDIO2_BUFFER buffer = {0};

	if (!this->audioAvailable)
	{
		// Audio is not available so just return.
		return;
	}

	// Interrupt sound effect if it is currently playing.
	auto hr = this->xSourceVoice->Stop();
	DXHelper::ThrowIfFailed(hr);

	hr = this->xSourceVoice->FlushSourceBuffers();
	DXHelper::ThrowIfFailed(hr);

	buffer.AudioBytes = this->soundData->Length;
	buffer.pAudioData = this->soundData->Data;
	buffer.Flags = XAUDIO2_END_OF_STREAM;

	hr = xSourceVoice->SetVolume(volume);
	DXHelper::ThrowIfFailed(hr);
	
	hr = xSourceVoice->SubmitSourceBuffer(&buffer);
	DXHelper::ThrowIfFailed(hr);

	hr = xSourceVoice->Start();
	DXHelper::ThrowIfFailed(hr);
}